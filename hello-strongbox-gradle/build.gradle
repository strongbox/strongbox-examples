plugins {
    id("maven-publish")
}

apply plugin: 'java'
apply plugin: 'maven'

compileJava {
    targetCompatibility = "1.8"
    sourceCompatibility = "1.8"
    options.encoding = 'UTF-8'
}

description = "Example project that shows how to use gradle to build and deploy artifacts to Strongbox"

// GPR-friendly artifact version when deploying to GitHub Package Registry
// The version string is generated via a GitHub action that deploys the artifact to the GitHub Package Registry
// This is necessary as GitHub does not support overriding of published artifacts
// See https://docs.github.com/en/free-pro-team@latest/packages/publishing-and-managing-packages/deleting-a-package#about-public-package-deletion
ext.gprVersion = project.findProperty("gpr.version") ?: "1.0-SNAPSHOT"

// publishing to GitHub Package Registry
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/strongbox/strongbox-examples")
            credentials {
                // GITHUB_USERNAME is automatically provided by the actions/setup-java action
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                // GITHUB_TOKEN is automatically provided by GitHub for every repository
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            pom {
                description = "Example project that shows how to use gradle to build and deploy artifacts to Strongbox"
            }

            groupId = "org.carlspring.strongbox.examples"
            artifactId = "hello-strongbox-gradle"
            version = gprVersion

            from components.java
        }
    }
}

ext.username = System.getProperty('credentials.username') != null ? System.getProperty('credentials.username') : "maven"
ext.password = System.getProperty('credentials.password') != null ? System.getProperty('credentials.password') : "password"

configurations {
    deployerJars
}

repositories {
    maven { url "http://localhost:48080/storages/storage0/releases/" }
    maven { url "http://localhost:48080/storages/storage0/snapshots/" }
    mavenCentral()
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// Compare to maven deploy
// Gradle build Configuration to publish artifacts to maven artifact manager
uploadArchives {
    repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "http://localhost:48080/storages/storage0/snapshots/") {
                authentication(userName: username, password: password)
            }
            pom.groupId = "org.carlspring.strongbox.examples"
            pom.artifactId = "hello-strongbox-gradle"
            pom.version = "1.0-SNAPSHOT"
    }
}

// ------------------------------------------------------
// EXAMPLE: custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
}
